// <auto-generated />
using System;
using AccessControlServiceModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AccessControlServiceModel.Migrations
{
    [DbContext(typeof(AccessControlServiceContext))]
    [Migration("20181022121846_AddKpuMetadataTable")]
    partial class AddKpuMetadataTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AccessControlServiceModel.GroupPermission", b =>
                {
                    b.Property<string>("GroupIdentification")
                        .HasMaxLength(128);

                    b.Property<long>("PermissionId");

                    b.Property<DateTime>("GrantedAt");

                    b.Property<string>("Grantee")
                        .HasMaxLength(128);

                    b.Property<bool>("IsGranted");

                    b.HasKey("GroupIdentification", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("GroupPermission","ACS");
                });

            modelBuilder.Entity("AccessControlServiceModel.KpuMetadata", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Data");

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("Metadata","KPU");
                });

            modelBuilder.Entity("AccessControlServiceModel.KpuMetadataPermission", b =>
                {
                    b.Property<long>("KpuMetadataId");

                    b.Property<long>("PermissionId");

                    b.HasKey("KpuMetadataId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("MetadataPermission","KPU");
                });

            modelBuilder.Entity("AccessControlServiceModel.Permission", b =>
                {
                    b.Property<long>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ParentPermissionId");

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("PermissionId");

                    b.HasIndex("ParentPermissionId");

                    b.HasIndex("PermissionName")
                        .IsUnique();

                    b.ToTable("Permission","ACS");
                });

            modelBuilder.Entity("AccessControlServiceModel.GroupPermission", b =>
                {
                    b.HasOne("AccessControlServiceModel.Permission", "Permission")
                        .WithMany("Groups")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AccessControlServiceModel.KpuMetadataPermission", b =>
                {
                    b.HasOne("AccessControlServiceModel.KpuMetadata", "KpuMetadata")
                        .WithMany("KpuMetadataPermissions")
                        .HasForeignKey("KpuMetadataId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AccessControlServiceModel.Permission", "Permission")
                        .WithMany("KpuMetadataPermission")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AccessControlServiceModel.Permission", b =>
                {
                    b.HasOne("AccessControlServiceModel.Permission", "ParentPermission")
                        .WithMany("ChildPermissions")
                        .HasForeignKey("ParentPermissionId");
                });
#pragma warning restore 612, 618
        }
    }
}
